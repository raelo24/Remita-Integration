// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RemitaBillAndBulkPayments.Models.EFContext;

namespace RemitaBillAndBulkPayments.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RemitaBillAndBulkPayments.Models.Auth.TokenData", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ExpireDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("accessToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("expiresIn")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("TokenData");
                });

            modelBuilder.Entity("RemitaBillAndBulkPayments.Models.BillersRequests.BillPaymentRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("RequestDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("amountDebitted")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("branchCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("debittedAccount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fundingSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("incomeAccount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("paymentAuthCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("paymentChannel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rrr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tellerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("transactionId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("PaymentRequests");
                });

            modelBuilder.Entity("RemitaBillAndBulkPayments.Models.BillersResponses.BillPaymentResponse", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("amountDebitted")
                        .HasColumnType("float");

                    b.Property<double>("balanceDue")
                        .HasColumnType("float");

                    b.Property<string>("debittedAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("paymentDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("paymentRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("responseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("responseMsg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rrr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("totalAmount")
                        .HasColumnType("float");

                    b.Property<long>("transactionId")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.ToTable("PaymentResponses");
                });

            modelBuilder.Entity("RemitaBillAndBulkPayments.Models.BulkRequests.BulkRequest", b =>
                {
                    b.Property<string>("batchRef")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("originalAccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("originalBankCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sourceAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sourceAccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sourceBankCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sourceNarration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("totalAmount")
                        .HasColumnType("float");

                    b.HasKey("batchRef");

                    b.ToTable("BulkRequests");
                });

            modelBuilder.Entity("RemitaBillAndBulkPayments.Models.BulkRequests.Transaction", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BulkRequestbatchRef")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("amount")
                        .HasColumnType("float");

                    b.Property<string>("destinationAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("destinationAccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("destinationBankCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("destinationNarration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("transactionRef")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("BulkRequestbatchRef");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("RemitaBillAndBulkPayments.Models.BulkResponses.BulkData", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BulkId")
                        .HasColumnType("int");

                    b.Property<string>("authorizationId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("batchRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("totalAmount")
                        .HasColumnType("float");

                    b.Property<string>("transactionDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("BulkId")
                        .IsUnique();

                    b.ToTable("BulkData");
                });

            modelBuilder.Entity("RemitaBillAndBulkPayments.Models.BulkResponses.BulkResponse", b =>
                {
                    b.Property<int>("BulkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BulkId");

                    b.ToTable("BulkResponses");
                });

            modelBuilder.Entity("RemitaBillAndBulkPayments.Models.BulkRequests.Transaction", b =>
                {
                    b.HasOne("RemitaBillAndBulkPayments.Models.BulkRequests.BulkRequest", null)
                        .WithMany("transactions")
                        .HasForeignKey("BulkRequestbatchRef");
                });

            modelBuilder.Entity("RemitaBillAndBulkPayments.Models.BulkResponses.BulkData", b =>
                {
                    b.HasOne("RemitaBillAndBulkPayments.Models.BulkResponses.BulkResponse", "BulkResponse")
                        .WithOne("data")
                        .HasForeignKey("RemitaBillAndBulkPayments.Models.BulkResponses.BulkData", "BulkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BulkResponse");
                });

            modelBuilder.Entity("RemitaBillAndBulkPayments.Models.BulkRequests.BulkRequest", b =>
                {
                    b.Navigation("transactions");
                });

            modelBuilder.Entity("RemitaBillAndBulkPayments.Models.BulkResponses.BulkResponse", b =>
                {
                    b.Navigation("data");
                });
#pragma warning restore 612, 618
        }
    }
}
